{
  "component element": {
    "prefix": "component",
    "body": ["<component :is=\"${1:componentId}\"></component>$0"],
    "description": "component element"
  },

  "transition element": {
    "prefix": "v:transition",
    "body": ["<transition$1>", "$2", "</transition>$0"],
    "description": "transition element"
  },

  "transition-group element": {
    "prefix": "v:transitionGroup",
    "body": ["<transition-group$1>", "$2", "</transition-group>"],
    "description": "transition-group element"
  },

  "transition enter-from-class": {
    "prefix": "v:enterFromClass",
    "body": ["$2enter-from-class=\"$1\"$0"],
    "description": "enter-from-class=''. Expects: string."
  },

  "transition enter-active-class": {
    "prefix": "v:enterActiveClass",
    "body": ["$2enter-active-class=\"$1\"$0"],
    "description": "enter-active-class=''. Expects: string."
  },

  "transition enter-to-class": {
    "prefix": "v:enterToClass",
    "body": ["$2enter-to-class=\"$1\"$0"],
    "description": "enter-to-class=''. Expects: string."
  },

  "transition appear-from-class": {
    "prefix": "v:appearFromClass",
    "body": ["$2appear-from-class=\"$1\"$0"],
    "description": "appear-from-class=''. Expects: string."
  },

  "transition appear-active-class": {
    "prefix": "v:appearActiveClass",
    "body": ["$2appear-active-class=\"$1\"$0"],
    "description": "appear-active-class=''. Expects: string."
  },

  "transition appear-to-class": {
    "prefix": "v:appearToClass",
    "body": ["$2appear-to-class=\"$1\"$0"],
    "description": "appear-to-class=''. Expects: string."
  },

  "transition leave-from-class": {
    "prefix": "v:leaveFromClass",
    "body": ["$2leave-from-class=\"$1\"$0"],
    "description": "leave-from-class=''. Expects: string."
  },

  "transition leave-active-class": {
    "prefix": "v:leaveActiveClass",
    "body": ["$2leave-active-class=\"$1\"$0"],
    "description": "leave-active-class=''. Expects: string."
  },

  "transition leave-to-class": {
    "prefix": "v:leaveToClass",
    "body": ["$2leave-to-class=\"$1\"$0"],
    "description": "leave-to-class=''. Expects: string."
  },

  "transition before-enter": {
    "prefix": "v:beforeEnterEvent",
    "body": ["@before-enter=\"$1\"$0"],
    "description": "@before-enter=''"
  },

  "transition before-leave": {
    "prefix": "v:beforeLeaveEvent",
    "body": ["@before-leave=\"$1\"$0"],
    "description": "@before-leave=''"
  },
  
  "transition enter": {
    "prefix": "v:enterEvent",
    "body": ["@enter=\"$1\"$0"],
    "description": "@enter=''"
  },

  "transition leave": {
    "prefix": "v:leaveEvent",
    "body": ["@leave=\"$1\"$0"],
    "description": "@leave=''"
  },

  "transition appear": {
    "prefix": "v:appearEvent",
    "body": ["@appear=\"$1\"$0"],
    "description": "@appear=''"
  },

  "transition after-enter": {
    "prefix": "v:afterEnterEvent",
    "body": ["@after-enter=\"$1\"$0"],
    "description": "@after-enter=''"
  },

  "transition after-leave": {
    "prefix": "v:afterLeaveEvent",
    "body": ["@after-leave=\"$1\"$0"],
    "description": "@after-leave=''"
  },

  "transition after-appear": {
    "prefix": "v:afterAppearEvent",
    "body": ["@after-appear=\"$1\"$0"],
    "description": "@after-appear=''"
  },

  "transition enter-cancelled": {
    "prefix": "v:enterCancelledEvent",
    "body": ["@enter-cancelled=\"$1\"$0"],
    "description": "@enter-cancelled=''"
  },

  "transition leave-cancelled": {
    "prefix": "v:leaveCancelledEvent",
    "body": ["@leave-cancelled=\"$1\"$0"],
    "description": "@leave-cancelled='' (v-show only)"
  },

  "transition appear-cancelled": {
    "prefix": "v:appearCancelledEvent",
    "body": ["@appear-cancelled=\"$1\"$0"],
    "description": "@appear-cancelled=''"
  },
  
  "keep-alive element": {
    "prefix": "v:keepAlive",
    "body": ["<keep-alive$1>", "$2", "</keep-alive>$0"],
    "description": "keep-alive element"
  },

  "slot element": {
    "prefix": "v:slot",
    "body": ["<slot$1>$2</slot>$0"],
    "description": "<slot></slot>. Expects: string. Used on content inserted into child components to indicate which named slot the content belongs to."
  },

  "router link element": {
    "prefix": "v:routerLink",
    "body": ["<router-link ${1|to,:to|}=\"$2\">$3</router-link>$0"],
    "description": "<router-link to=''></router-link>. router-link element"
  },

  "router link to props": {
    "prefix": "v:to",
    "body": ["${1|to,:to|}=\"$2\"$0"],
    "description": "to=''"
  }
}
