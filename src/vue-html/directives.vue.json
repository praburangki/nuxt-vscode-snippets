{
  "v-text": {
    "prefix": "v:text",
    "body": ["v-text=\"${1:msg}\""],
    "description": "Updates the element’s textContent."
  },

  "v-html": {
    "prefix": "v:html",
    "body": ["v-html=\"${1:html}\""],
    "description": "Updates the element’s innerHTML."
  },

  "v-show": {
    "prefix": "v:show",
    "body": ["v-show=\"${1:condition}\""],
    "description": "Toggles the element's display CSS property"
  },

  "v-if": {
    "prefix": "v:if",
    "body": ["v-if=\"${1:condition}\""],
    "description": "Conditionally render the element"
  },

  "v-else": {
    "prefix": "v:else",
    "body": ["v-else"],
    "description": "Denote the `else block` for v-if or a v-if/v-else-if chain"
  },

  "v-else-if": {
    "prefix": "v:else-if",
    "body": ["v-else-if=\"${1:condition}\""],
    "description": "Denote the `else if block` for v-if"
  },

  "v-for-without-key": {
    "prefix": "v:for-non-key",
    "body": ["v-for=\"${1:item} in ${2:items}\""],
    "description": "Render the element or template block multiple times based on the source data."
  },

  "v-for": {
    "prefix": "v:for",
    "body": [
      "v-for=\"(${1:item}${2|\\, index,\u200B|}) in ${3:items}\" :key=\"${4:index}\""
    ],
    "description": "Render the element or template block multiple times based on the source data."
  },

  "v-on": {
    "prefix": "v:on",
    "body": ["@${1:event}=\"${2:handle}\""],
    "description": "Attaches an event listener to the element"
  },

  "v-bind": {
    "prefix": "v:bind",
    "body": [":$1=\"${2}\""],
    "description": "Dynamically bind one or more attributes, or a component prop to an expression."
  },

  "v-model": {
    "prefix": "v:model",
    "body": ["v-model=\"${1:value}\""],
    "description": "Create a two-way binding."
  },

  "v-model:custom": {
    "prefix": "v:model:custom",
    "body": ["v-model:$1=\"${2:value}\""],
    "description": "Create a two-way binding with custom identifier."
  },

  "v-slot-name": {
    "prefix": "v:slotName",
    "body": ["#${1:slotName}=\"${2}\""],
    "description": "Denote named slots or slots that expect to receive props."
  },

  "v-key": {
    "prefix": "v:key",
    "body": [":key=\"${1:key}\""],
    "description": "Expects: string. Children of the same common parent must have unique keys. Duplicate keys will cause render errors."
  },

  "v-ref": {
    "prefix": "v:ref",
    "body": ["ref=\"${1:reference}\"$0"],
    "description": "Expects: string. ref is used to register a reference to an element or a child component. The reference will be registered under the parent component’s $refs object. If used on a plain DOM element, the reference will be that element; if used on a child component, the reference will be component instance."
  }
}
